Ajax(Asynchronous Javascript And XML)
는 비동기적인 웹 애플리케이션 웹 개발 기법이다.
1. 표현 정보를 위한 HTML( 또는 XHTML)과 CSS
2. 동적인 화면 출력 및 표시 정보와의 상호작용을 위한 DOM, 자바 스크립트
3. 웹 서버와 비동기적으로 데이터를 교환하고 조작하기 위한 
   XML, XSLT, XMHLHttpRequest(Ajax 애플리케이션은 XML/XSLT 대신 미리 정의된 HTML이나 일반 텍스트, JSON, JSON-RPC를 이용할 수 있다.

DHTML이나 LAMP와 같이 AJax는 자체가 하나의 특정한 기술을 말하는 것이 아니며, 함께 사용하는 기술의 묶음을 지칭하는 용어

Ajax 애플리케이션은 실행을 위한 플랫폼으로 위에서 열거한 기술들을 지원하는 웹 브라우저를 이용한다.

Ajax 애플리케이션에 브라우저(client)와 웹 서버(서버)의 요청과 응답
Ajax 애플리케이션은 필요한 데이터만을 웹서버에 요청해서 받은 후 클라이언트에서 데이터에 대한 처리를 할 수 있다.
보통 SOAP이나 XML 기반의 웹 서비스 프로토콜이 사용되며, 웹 서버의 응답을 처리하기 위해 클라이언트 쪽에서는 자바스크립트를 쓴다.
웹 서버에서 전적으로 처리되던 데이터 처리의 일부분이 클라이언트 쪽에서 처리되므로 웹 브라우저와 웹 서버 사이에 교환되는 데이터량과 웹 서버의 데이터 처리량도 줄어들기 때문에 애플리케이션의 응답성이 좋아진다.
또한 웹서버의 데이터 처리에 대한 부하를 줄여주는 일이 요청을 주는 수많은 컴퓨터에 대해서 일어나기 때문에 전체적인 웹 서버 처리량도 줄어들게 된다.

장점 
1. 페이지 이동없이 고속으로 화면을 전환할 수 있다.
2. 서버 처리를 기다리지 않고, 비동기 요청이 가능하다.
3. 수신하는 데이터 양을 줄일 수 있고, 클라이언트에게 처리를 위임할 수도 있다.
4. 플러그인 없이도 인터렉티브한 웹 페이지 구현할 수 있다.

단점
1. Ajax를 쓸 수 없는 브라우저에 대한 문제가 있다.
2. Http 클라이언트의 기능이 한정되어 있다.
3. 페이지 이동없는 통신으로 인한 보안상의 문제
4. 지원하는 문잡집합(Charset)이 한정되어 있다.
5. 요청을 남발하면 역으로 서버 부하가 늘 수 있음.
6. 동일-출처 정책으로 인해 다른 도메인과는 통신이 불가능하다.
